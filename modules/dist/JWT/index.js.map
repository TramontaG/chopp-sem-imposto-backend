{"version":3,"file":"index.js","names":["_jsonwebtoken","_interopRequireDefault","require","_fs","_adminsController","e","__esModule","default","ownKeys","r","t","Object","keys","getOwnPropertySymbols","o","filter","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","arguments","length","forEach","_defineProperty","getOwnPropertyDescriptors","defineProperties","defineProperty","_toPropertyKey","value","configurable","writable","i","_toPrimitive","Symbol","toPrimitive","call","TypeError","String","Number","privateKEY","process","env","PRIVATE_KEY","fs","readFileSync","publicKEY","PUBLIC_KEY","algorithm","signOptions","verifyOptions","algorithms","generateJwt","credentials","jwt","sign","seed","Math","random","toString","exports","verifyJwt","token","verify","checkJWT","permissions","userId","username","adminData","adminsController","getAdmin","hasAllPerms","arraysContainAllElements","includes","console","warn","A","B","every","element"],"sources":["../../src/JWT/index.ts"],"sourcesContent":["import jwt, { type Algorithm } from \"jsonwebtoken\";\nimport fs from \"fs\";\nimport adminsController from \"../database/controllers/adminsController\";\n\nconst privateKEY =\n  process.env.PRIVATE_KEY ?? fs.readFileSync(\"./keys/privatekey.pem\", \"utf8\");\nconst publicKEY =\n  process.env.PUBLIC_KEY ?? fs.readFileSync(\"./keys/publickey.pem\", \"utf8\");\n\nif (!privateKEY || !publicKEY) {\n  throw 'You need the necessary keys to run this API. Please run the script located at \"./scrips/generate_key_pair.sh\".';\n}\n\nconst algorithm: Algorithm = \"RS512\";\n\nconst signOptions = {\n  algorithm,\n};\n\nconst verifyOptions = {\n  algorithms: [algorithm],\n};\n\ntype JWTCredentials = {\n  userId: string;\n  username: string;\n};\n\nexport const generateJwt = (credentials: JWTCredentials) => {\n  return jwt.sign(\n    {\n      ...credentials,\n      seed: Math.random().toString(),\n    },\n    privateKEY,\n    signOptions\n  );\n};\n\nexport const verifyJwt = (token: string) => {\n  return jwt.verify(token, publicKEY, verifyOptions) as JWTCredentials;\n};\n\nexport const checkJWT = async (jwt: string, permissions: string[]) => {\n  try {\n    const { userId, username } = verifyJwt(jwt);\n\n    const adminData = await adminsController.getAdmin(userId);\n\n    const hasAllPerms =\n      arraysContainAllElements(adminData.permissions, permissions) ||\n      adminData.permissions.includes(\"*\");\n\n    if (hasAllPerms) {\n      return {\n        userId,\n        username,\n      };\n    } else {\n      return false;\n    }\n  } catch (e) {\n    console.warn(e);\n    return false;\n  }\n};\n\nexport const arraysContainAllElements = <T>(A: T[], B: T[]): boolean => {\n  return B.every((element) => A.includes(element));\n};\n"],"mappings":"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","ignoreList":[]}