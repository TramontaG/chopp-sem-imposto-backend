{"version":3,"file":"requestContext.js","names":["useRequestContext","initialData","context","set","requestId","key","value","get","middleware","req","res","next","crypto","randomUUID","_value","clear","exports"],"sources":["../../src/Util/requestContext.ts"],"sourcesContent":["import type { RequestHandler } from \"express\";\n\nexport {};\n\ntype RequestContext = {\n  job: {\n    type: \"ocr\" | \"tts\";\n    id: string;\n  };\n};\n\ndeclare global {\n  namespace Express {\n    export interface Request {\n      context: {\n        _value: Record<string, any>;\n        set: <Key extends keyof RequestContext>(\n          key: Key,\n          value: RequestContext[Key]\n        ) => void;\n        get: <Key extends keyof RequestContext>(\n          key: Key\n        ) => RequestContext[Key];\n        clear: () => void;\n      };\n    }\n  }\n}\n/**\n * Adds a context object to the request, so that middlewares can add data to the\n * context. This data can be retrieved later until the last request handler of the\n * express queue.\n * @param initialData\n * @returns\n */\nexport const useRequestContext = <Context extends Record<string, any>>(\n  initialData: Context\n) => {\n  let context: Record<string, Context> = {};\n\n  const set =\n    (requestId: string) =>\n    <Key extends keyof Context>(key: Key, value: Context[Key]) => {\n      context[requestId][key] = value;\n    };\n\n  const get = (requestId: string) => (key: keyof Context) =>\n    context[requestId][key];\n\n  const middleware: RequestHandler = (req, res, next) => {\n    const requestId = crypto.randomUUID();\n    context[requestId] = initialData;\n    req.context = {\n      _value: context[requestId],\n      get: get(requestId),\n      // Why is this type cast necessary? I have no idea\n      set: set(requestId) as Context[\"set\"],\n      clear: () => delete context[requestId],\n    };\n\n    next();\n  };\n\n  return middleware;\n};\n"],"mappings":";;;;;;AA4BA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,MAAMA,iBAAiB,GAC5BC,WAAoB,IACjB;EACH,IAAIC,OAAgC,GAAG,CAAC,CAAC;EAEzC,MAAMC,GAAG,GACNC,SAAiB,IAClB,CAA4BC,GAAQ,EAAEC,KAAmB,KAAK;IAC5DJ,OAAO,CAACE,SAAS,CAAC,CAACC,GAAG,CAAC,GAAGC,KAAK;EACjC,CAAC;EAEH,MAAMC,GAAG,GAAIH,SAAiB,IAAMC,GAAkB,IACpDH,OAAO,CAACE,SAAS,CAAC,CAACC,GAAG,CAAC;EAEzB,MAAMG,UAA0B,GAAGA,CAACC,GAAG,EAAEC,GAAG,EAAEC,IAAI,KAAK;IACrD,MAAMP,SAAS,GAAGQ,MAAM,CAACC,UAAU,CAAC,CAAC;IACrCX,OAAO,CAACE,SAAS,CAAC,GAAGH,WAAW;IAChCQ,GAAG,CAACP,OAAO,GAAG;MACZY,MAAM,EAAEZ,OAAO,CAACE,SAAS,CAAC;MAC1BG,GAAG,EAAEA,GAAG,CAACH,SAAS,CAAC;MACnB;MACAD,GAAG,EAAEA,GAAG,CAACC,SAAS,CAAmB;MACrCW,KAAK,EAAEA,CAAA,KAAM,OAAOb,OAAO,CAACE,SAAS;IACvC,CAAC;IAEDO,IAAI,CAAC,CAAC;EACR,CAAC;EAED,OAAOH,UAAU;AACnB,CAAC;AAACQ,OAAA,CAAAhB,iBAAA,GAAAA,iBAAA","ignoreList":[]}