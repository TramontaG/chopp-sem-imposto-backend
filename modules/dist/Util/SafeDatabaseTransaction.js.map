{"version":3,"file":"SafeDatabaseTransaction.js","names":["FAIL_REASONS","exports","errorsMap","UPDATE_NON_EXISTENT_ENTITY","ALREADY_EXISTS","NOT_FOUND","UNDETERMINED","TYPE_MISMATCH","UNAUTHORIZED","FORBIDDEN","INVALID_ADDRESS","INVALID_USER","OPERATION_FORBIDDEN","FAIL_LOGIN","transactionError","reason","success","transactionSuccess","data","validationError","fields","code","error","errorType","customError","variant","message","isTransactionSuccessful","transactionResult","safeReturnTransaction","transaction","transformer"],"sources":["../../src/Util/SafeDatabaseTransaction.ts"],"sourcesContent":["export enum FAIL_REASONS {\n  ALREADY_EXISTS = \"Entity already exists\",\n  NOT_FOUND = \"Entity not found\",\n  UPDATE_NON_EXISTENT_ENTITY = \"Tried to update a entity that doesn't exist\",\n  UNDETERMINED = \"Undetermined fail reason\",\n  TYPE_MISMATCH = \"Tried to work on entities of the wrong type\",\n  FORBIDDEN = \"You don't have permission to access this resource\",\n  UNAUTHORIZED = \"Please login again\",\n  INVALID_ADDRESS = \"This address is not valid\",\n  INVALID_USER = \"This user is invalid. Please login again\",\n  OPERATION_FORBIDDEN = \"This request is not possible to be fullfiled\",\n  FAIL_LOGIN = \"Invalid username or password\",\n}\n\nconst errorsMap: {\n  [key in FAIL_REASONS]: number;\n} = {\n  [FAIL_REASONS.UPDATE_NON_EXISTENT_ENTITY]: 400,\n  [FAIL_REASONS.ALREADY_EXISTS]: 400,\n  [FAIL_REASONS.NOT_FOUND]: 404,\n  [FAIL_REASONS.UNDETERMINED]: 500,\n  [FAIL_REASONS.TYPE_MISMATCH]: 400,\n  [FAIL_REASONS.UNAUTHORIZED]: 401,\n  [FAIL_REASONS.FORBIDDEN]: 403,\n  [FAIL_REASONS.INVALID_ADDRESS]: 400,\n  [FAIL_REASONS.INVALID_USER]: 404,\n  [FAIL_REASONS.OPERATION_FORBIDDEN]: 400,\n  [FAIL_REASONS.FAIL_LOGIN]: 400,\n};\n\nexport type TransactionSuccess<Data> = {\n  success: true;\n  data: Data;\n};\nexport type TransactionFailed = {\n  success: false;\n  reason: FAIL_REASONS;\n};\n\nexport type TransactionResult<Data> =\n  | TransactionSuccess<Data>\n  | TransactionFailed;\n\nexport const transactionError = (reason: FAIL_REASONS): TransactionFailed => ({\n  success: false,\n  reason: reason,\n});\n\nexport const transactionSuccess = <Data>(\n  data: Data\n): TransactionSuccess<Data> => ({\n  success: true,\n  data,\n});\n\nexport const validationError = (\n  fields: {\n    path: string;\n    message: string;\n  }[]\n) => {\n  throw {\n    code: 400,\n    error: {\n      errorType: \"Validation\",\n      fields,\n    },\n  };\n};\n\nexport const customError = (code: number, variant: string, message: string) => {\n  return {\n    code,\n    error: {\n      errorType: \"Custom\",\n      variant,\n      message,\n    },\n  };\n};\n\nexport const isTransactionSuccessful = <Data>(\n  transactionResult: TransactionResult<Data>\n): transactionResult is TransactionSuccess<Data> => {\n  return transactionResult.success;\n};\n\nexport const safeReturnTransaction = <DataShape, OutputShape>(\n  transaction: TransactionResult<DataShape>,\n  transformer?: (data: TransactionSuccess<DataShape>[\"data\"]) => OutputShape\n) => {\n  if (!isTransactionSuccessful(transaction)) {\n    throw {\n      code: errorsMap[transaction.reason],\n      error: {\n        errorType: \"Transaction\",\n        message: transaction.reason,\n      },\n    };\n  } else {\n    return transformer ? transformer(transaction.data) : transaction.data;\n  }\n};\n"],"mappings":";;;;;;IAAYA,YAAY,GAAAC,OAAA,CAAAD,YAAA,0BAAZA,YAAY;EAAZA,YAAY;EAAZA,YAAY;EAAZA,YAAY;EAAZA,YAAY;EAAZA,YAAY;EAAZA,YAAY;EAAZA,YAAY;EAAZA,YAAY;EAAZA,YAAY;EAAZA,YAAY;EAAZA,YAAY;EAAA,OAAZA,YAAY;AAAA;AAcxB,MAAME,SAEL,GAAG;EACF,CAACF,YAAY,CAACG,0BAA0B,GAAG,GAAG;EAC9C,CAACH,YAAY,CAACI,cAAc,GAAG,GAAG;EAClC,CAACJ,YAAY,CAACK,SAAS,GAAG,GAAG;EAC7B,CAACL,YAAY,CAACM,YAAY,GAAG,GAAG;EAChC,CAACN,YAAY,CAACO,aAAa,GAAG,GAAG;EACjC,CAACP,YAAY,CAACQ,YAAY,GAAG,GAAG;EAChC,CAACR,YAAY,CAACS,SAAS,GAAG,GAAG;EAC7B,CAACT,YAAY,CAACU,eAAe,GAAG,GAAG;EACnC,CAACV,YAAY,CAACW,YAAY,GAAG,GAAG;EAChC,CAACX,YAAY,CAACY,mBAAmB,GAAG,GAAG;EACvC,CAACZ,YAAY,CAACa,UAAU,GAAG;AAC7B,CAAC;AAeM,MAAMC,gBAAgB,GAAIC,MAAoB,KAAyB;EAC5EC,OAAO,EAAE,KAAK;EACdD,MAAM,EAAEA;AACV,CAAC,CAAC;AAACd,OAAA,CAAAa,gBAAA,GAAAA,gBAAA;AAEI,MAAMG,kBAAkB,GAC7BC,IAAU,KACoB;EAC9BF,OAAO,EAAE,IAAI;EACbE;AACF,CAAC,CAAC;AAACjB,OAAA,CAAAgB,kBAAA,GAAAA,kBAAA;AAEI,MAAME,eAAe,GAC1BC,MAGG,IACA;EACH,MAAM;IACJC,IAAI,EAAE,GAAG;IACTC,KAAK,EAAE;MACLC,SAAS,EAAE,YAAY;MACvBH;IACF;EACF,CAAC;AACH,CAAC;AAACnB,OAAA,CAAAkB,eAAA,GAAAA,eAAA;AAEK,MAAMK,WAAW,GAAGA,CAACH,IAAY,EAAEI,OAAe,EAAEC,OAAe,KAAK;EAC7E,OAAO;IACLL,IAAI;IACJC,KAAK,EAAE;MACLC,SAAS,EAAE,QAAQ;MACnBE,OAAO;MACPC;IACF;EACF,CAAC;AACH,CAAC;AAACzB,OAAA,CAAAuB,WAAA,GAAAA,WAAA;AAEK,MAAMG,uBAAuB,GAClCC,iBAA0C,IACQ;EAClD,OAAOA,iBAAiB,CAACZ,OAAO;AAClC,CAAC;AAACf,OAAA,CAAA0B,uBAAA,GAAAA,uBAAA;AAEK,MAAME,qBAAqB,GAAGA,CACnCC,WAAyC,EACzCC,WAA0E,KACvE;EACH,IAAI,CAACJ,uBAAuB,CAACG,WAAW,CAAC,EAAE;IACzC,MAAM;MACJT,IAAI,EAAEnB,SAAS,CAAC4B,WAAW,CAACf,MAAM,CAAC;MACnCO,KAAK,EAAE;QACLC,SAAS,EAAE,aAAa;QACxBG,OAAO,EAAEI,WAAW,CAACf;MACvB;IACF,CAAC;EACH,CAAC,MAAM;IACL,OAAOgB,WAAW,GAAGA,WAAW,CAACD,WAAW,CAACZ,IAAI,CAAC,GAAGY,WAAW,CAACZ,IAAI;EACvE;AACF,CAAC;AAACjB,OAAA,CAAA4B,qBAAA,GAAAA,qBAAA","ignoreList":[]}