{"version":3,"file":"ZodValidation.js","names":["Zod","_interopRequireWildcard","require","e","t","WeakMap","r","n","__esModule","o","i","f","__proto__","default","has","get","set","hasOwnProperty","call","Object","defineProperty","getOwnPropertyDescriptor","createCustomError","code","variant","message","error","errorType","exports","createTransactionError","reason","data","isDefaultError","getPropertyListFromObject","obj","entries","reduce","acc","key","value","push","validate","zod","object","query","safeParse","success","fields","issues","literalSchema","union","string","number","boolean","null","jsonSchema","lazy","array","record","min","stringArray","optional","shape","any","or","shape1","shape2","refine","anyObject","enums","values","enum","typeNull","phoneRegex","cpfRegex","cnpjRegex","brazilianIdRegex","cepRegex","phone","regex","cpf","cnpj","brazilianId","cep","emoji","url","email","document","booleanAsString","toLowerCase","startsWith","endsWith","length","transform"],"sources":["../../src/Util/ZodValidation.ts"],"sourcesContent":["import * as Zod from 'zod';\n\ntype DefaultError = {\n\tcode: number;\n\terror: ValidationError | TransactionError | CustomError;\n};\n\nexport type ValidationError = {\n\terrorType: 'Validation';\n\tfields: {\n\t\tpath: string[];\n\t\tmessage: string;\n\t}[];\n};\n\nexport const createCustomError = (\n\tcode: number,\n\tvariant: string,\n\tmessage: string\n) => ({\n\tcode,\n\terror: {\n\t\terrorType: 'Custom',\n\t\tvariant,\n\t\tmessage,\n\t},\n});\n\nexport type CustomError = {\n\terrorType: 'Custom';\n\tvariant: string;\n\tmessage: string;\n};\n\nexport type TransactionError = {\n\terrorType: 'Transaction';\n\tmessage: string;\n\tdata: any;\n};\n\nexport const createTransactionError = (\n\tcode: number,\n\treason: string,\n\tdata: any\n): DefaultError => ({\n\tcode,\n\terror: {\n\t\terrorType: 'Transaction',\n\t\tmessage: reason,\n\t\tdata,\n\t},\n});\n\nexport const isDefaultError = (e: any): e is DefaultError => {\n\treturn !!e && !!e.code;\n};\n\nexport const getPropertyListFromObject = <T extends Object>(obj: T) => {\n\treturn Object.entries(obj).reduce(\n\t\t(acc, [key, value]) => {\n\t\t\tacc[0].push(key);\n\t\t\tacc[1].push(value);\n\t\t\treturn acc;\n\t\t},\n\t\t[[] as string[], [] as T[keyof T][]] as const\n\t);\n};\n\nexport const validate = <Z extends Zod.ZodRawShape>(zod: Z, obj: Json) => {\n\tconst object = Zod.object(zod);\n\tconst query = object.safeParse(obj);\n\tif (!query.success) {\n\t\tthrow {\n\t\t\tcode: 400,\n\t\t\terror: {\n\t\t\t\terrorType: 'Validation',\n\t\t\t\tfields: query.error.issues,\n\t\t\t},\n\t\t};\n\t} else {\n\t\treturn query.data;\n\t}\n};\n\n// code copied from https://zod.dev/?id=json-type\nconst literalSchema = Zod.union([\n\tZod.string(),\n\tZod.number(),\n\tZod.boolean(),\n\tZod.null(),\n]);\ntype Literal = Zod.infer<typeof literalSchema>;\nexport type Json = Literal | { [key: string]: Json } | Json[];\nexport const jsonSchema: Zod.ZodType<Json> = Zod.lazy(() =>\n\tZod.union([literalSchema, Zod.array(jsonSchema), Zod.record(jsonSchema)])\n);\n\nexport const string = Zod.string().min(1);\nexport const number = Zod.number();\nexport const stringArray = Zod.array(string);\nexport const optional = <Shape extends Zod.ZodType>(shape: Shape) =>\n\tshape.optional();\nexport const boolean = Zod.boolean();\nexport const any = Zod.any();\nexport const array = <Shape extends Zod.ZodType>(shape: Shape) => Zod.array(shape);\nexport const or = <Shape1 extends Zod.ZodType, Shape2 extends Zod.ZodType>(\n\tshape1: Shape1,\n\tshape2: Shape2,\n\tmessage?: string\n) => {\n\treturn shape1.or(shape2).refine(\n\t\t() => {\n\t\t\treturn true;\n\t\t},\n\t\t{\n\t\t\tmessage,\n\t\t}\n\t);\n};\nexport const object = <Shape extends Zod.ZodRawShape>(obj: Shape) => Zod.object(obj);\nexport const anyObject = jsonSchema;\n\nexport const enums = <const Values extends readonly [string, ...string[]]>(\n\tvalues: Values\n) => Zod.enum(values);\n\nexport const typeNull = Zod.null();\nexport const phoneRegex = /^\\(([0-9]){2}\\)([0-9]){4,5}-([0-9]){4}$/;\nexport const cpfRegex = /^[0-9]{3}\\.[0-9]{3}\\.[0-9]{3}-[0-9]{2}$/;\nexport const cnpjRegex = /^[0-9]{2}\\.[0-9]{3}\\.[0-9]{3}\\/[0-9]{4}-[0-9]{2}$/;\nexport const brazilianIdRegex = /^[0-9]{2}\\.[0-9]{3}\\.[0-9]{3}-[0-9]$/;\nexport const cepRegex = /^[0-9]{5}-[0-9]{3}$/;\n\nexport const phone = string.regex(\n\tphoneRegex,\n\t'Deve ser um telefone válido, formato (99)99999-9999 or (99)9999-9999'\n);\nexport const cpf = string.regex(\n\tcpfRegex,\n\t'Deve ser um CPF válido, formato 999.999.999-99'\n);\nexport const cnpj = string.regex(\n\tcnpjRegex,\n\t'Deve ser um CNPJ Válido, formato 99.999.999/9999-99'\n);\nexport const brazilianId = string.regex(\n\tbrazilianIdRegex,\n\t'Deve ser um RG válido, formato 99.999.999-*'\n);\nexport const cep = string.regex(\n\tcepRegex,\n\t'Deve ser um CEP válido, formato 99999-999'\n);\nexport const emoji = string.emoji('Deve ser um Emoji');\nexport const url = string.url('URL inválida');\nexport const email = string.email('Email inválido');\nexport const document = string\n\t.regex(cpfRegex, 'Deve ser um CPF ou um CNPJ válido')\n\t.or(string.regex(cnpjRegex));\n\n/**\n * Accepts strings that when lowercase results to \"true\" or \"false\", outputs the proper boolean value\n */\nexport const booleanAsString = string\n\t.toLowerCase()\n\t.startsWith('true')\n\t.endsWith('true')\n\t.length(4)\n\t.transform(() => true)\n\t.or(\n\t\tstring\n\t\t\t.toLowerCase()\n\t\t\t.startsWith('false')\n\t\t\t.endsWith('false')\n\t\t\t.length(5)\n\t\t\t.transform(() => false)\n\t);\n"],"mappings":"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","ignoreList":[]}