{"version":3,"file":"eventsController..js","names":["_yasms","require","_","_interopRequireDefault","e","__esModule","default","MINUTE_IN_MS","eventsMemo","createMemoService","undefined","eventsDb","DbManager","eventsController","createEvent","name","description","location","organizer","date","id","crypto","randomUUID","eventData","bannerUrl","attendees","comments","hostContatInfo","interested","medias","type","createdAt","Date","now","updatedAt","deletedAt","upsertEntity","updateEvent","data","getEventById","getData","readEntity","then","val","deleteEvent","deleteData","deleteEntity","assertEventExists","entityExists","_default","exports"],"sources":["../../../src/database/controllers/eventsController..ts"],"sourcesContent":["import { createMemoService } from \"yasms\";\nimport DbManager from \"..\";\nimport type { AllEntitiesModel, DatabaseFriendlyEntityModel } from \"../schemas\";\n\nconst MINUTE_IN_MS = 1000 * 60;\nconst eventsMemo = createMemoService(undefined, MINUTE_IN_MS);\nconst eventsDb = DbManager(\"event\");\n\nconst eventsController = () => {\n  const createEvent = ({\n    name,\n    description,\n    location,\n    organizer,\n    date,\n  }: {\n    name: string;\n    description: string;\n    location: string;\n    organizer: string | null;\n    date: number;\n  }) => {\n    const id = `${name}/${crypto.randomUUID()}`;\n    const eventData: AllEntitiesModel[\"event\"] = {\n      bannerUrl: null,\n      attendees: [],\n      comments: [],\n      date,\n      description,\n      hostContatInfo: null,\n      interested: [],\n      location,\n      medias: [],\n      name,\n      organizer,\n      type: \"other\",\n\n      createdAt: Date.now(),\n      updatedAt: Date.now(),\n      deletedAt: null,\n    };\n\n    return eventsDb.upsertEntity(id, eventData);\n  };\n\n  const updateEvent = (\n    id: string,\n    data: Partial<DatabaseFriendlyEntityModel<\"event\">>\n  ) => {\n    return eventsDb.upsertEntity(id, data);\n  };\n\n  const getEventById = (id: string): Promise<AllEntitiesModel[\"event\"]> =>\n    eventsMemo\n      .getData(id, () => eventsDb.readEntity(id))\n      .then((val) => val.data);\n\n  const deleteEvent = (id: string) => {\n    eventsMemo.deleteData(id);\n    eventsDb.deleteEntity(id);\n  };\n  const assertEventExists = (id: string): Promise<boolean> =>\n    eventsMemo\n      .getData(`exists/${id}`, () => eventsDb.entityExists(id))\n      .then((val) => val.data);\n\n  return {\n    createEvent,\n    getEventById,\n    updateEvent,\n    deleteEvent,\n    assertEventExists,\n  };\n};\n\nexport default eventsController();\n"],"mappings":";;;;;;AAAA,IAAAA,MAAA,GAAAC,OAAA;AACA,IAAAC,CAAA,GAAAC,sBAAA,CAAAF,OAAA;AAA2B,SAAAE,uBAAAC,CAAA,WAAAA,CAAA,IAAAA,CAAA,CAAAC,UAAA,GAAAD,CAAA,KAAAE,OAAA,EAAAF,CAAA;AAG3B,MAAMG,YAAY,GAAG,IAAI,GAAG,EAAE;AAC9B,MAAMC,UAAU,GAAG,IAAAC,wBAAiB,EAACC,SAAS,EAAEH,YAAY,CAAC;AAC7D,MAAMI,QAAQ,GAAG,IAAAC,SAAS,EAAC,OAAO,CAAC;AAEnC,MAAMC,gBAAgB,GAAGA,CAAA,KAAM;EAC7B,MAAMC,WAAW,GAAGA,CAAC;IACnBC,IAAI;IACJC,WAAW;IACXC,QAAQ;IACRC,SAAS;IACTC;EAOF,CAAC,KAAK;IACJ,MAAMC,EAAE,GAAG,GAAGL,IAAI,IAAIM,MAAM,CAACC,UAAU,CAAC,CAAC,EAAE;IAC3C,MAAMC,SAAoC,GAAG;MAC3CC,SAAS,EAAE,IAAI;MACfC,SAAS,EAAE,EAAE;MACbC,QAAQ,EAAE,EAAE;MACZP,IAAI;MACJH,WAAW;MACXW,cAAc,EAAE,IAAI;MACpBC,UAAU,EAAE,EAAE;MACdX,QAAQ;MACRY,MAAM,EAAE,EAAE;MACVd,IAAI;MACJG,SAAS;MACTY,IAAI,EAAE,OAAO;MAEbC,SAAS,EAAEC,IAAI,CAACC,GAAG,CAAC,CAAC;MACrBC,SAAS,EAAEF,IAAI,CAACC,GAAG,CAAC,CAAC;MACrBE,SAAS,EAAE;IACb,CAAC;IAED,OAAOxB,QAAQ,CAACyB,YAAY,CAAChB,EAAE,EAAEG,SAAS,CAAC;EAC7C,CAAC;EAED,MAAMc,WAAW,GAAGA,CAClBjB,EAAU,EACVkB,IAAmD,KAChD;IACH,OAAO3B,QAAQ,CAACyB,YAAY,CAAChB,EAAE,EAAEkB,IAAI,CAAC;EACxC,CAAC;EAED,MAAMC,YAAY,GAAInB,EAAU,IAC9BZ,UAAU,CACPgC,OAAO,CAACpB,EAAE,EAAE,MAAMT,QAAQ,CAAC8B,UAAU,CAACrB,EAAE,CAAC,CAAC,CAC1CsB,IAAI,CAAEC,GAAG,IAAKA,GAAG,CAACL,IAAI,CAAC;EAE5B,MAAMM,WAAW,GAAIxB,EAAU,IAAK;IAClCZ,UAAU,CAACqC,UAAU,CAACzB,EAAE,CAAC;IACzBT,QAAQ,CAACmC,YAAY,CAAC1B,EAAE,CAAC;EAC3B,CAAC;EACD,MAAM2B,iBAAiB,GAAI3B,EAAU,IACnCZ,UAAU,CACPgC,OAAO,CAAC,UAAUpB,EAAE,EAAE,EAAE,MAAMT,QAAQ,CAACqC,YAAY,CAAC5B,EAAE,CAAC,CAAC,CACxDsB,IAAI,CAAEC,GAAG,IAAKA,GAAG,CAACL,IAAI,CAAC;EAE5B,OAAO;IACLxB,WAAW;IACXyB,YAAY;IACZF,WAAW;IACXO,WAAW;IACXG;EACF,CAAC;AACH,CAAC;AAAC,IAAAE,QAAA,GAAAC,OAAA,CAAA5C,OAAA,GAEaO,gBAAgB,CAAC,CAAC","ignoreList":[]}