{"version":3,"file":"Events.js","names":["_express","require","_SafeRequest","_JWT","V","_interopRequireWildcard","_eventsController","_interopRequireDefault","_SafeDatabaseTransaction","_cryptoService","_userController","_verifyHMAC","_confirmationMessage","e","__esModule","default","t","WeakMap","r","n","o","i","f","__proto__","has","get","set","hasOwnProperty","call","Object","defineProperty","getOwnPropertyDescriptor","EventsRouter","Router","post","useJWT","safeRequest","req","res","name","description","location","organizer","date","bannerUrl","validate","string","nullable","body","createEventTransaction","eventsController","createEvent","Date","getTime","safeReturnTransaction","id","data","anyObject","updateTransaction","updateEvent","useHMAC","json","payload","action","eventId","userId","eventCofirmationCryptoService","decrypt","console","log","interestedTransaction","userController","userInterestedInEvent","transactionError","FAIL_REASONS","OPERATION_FORBIDDEN","query","encrypt","send","decrypted","valid","error","result","sendConfirmationMessage","success","_default","exports"],"sources":["../../src/Router/Events.ts"],"sourcesContent":["import { json, Router } from \"express\";\nimport { safeRequest } from \"../Util/SafeRequest\";\nimport { useJWT } from \"../JWT\";\nimport * as V from \"../Util/ZodValidation\";\nimport eventsController from \"../database/controllers/eventsController.\";\nimport {\n  FAIL_REASONS,\n  safeReturnTransaction,\n  transactionError,\n} from \"../Util/SafeDatabaseTransaction\";\nimport type { DatabaseFriendlyEntityModel } from \"../database/schemas\";\nimport { eventCofirmationCryptoService } from \"../Util/crypto-service\";\nimport userController from \"../database/controllers/userController\";\nimport { useHMAC } from \"../JWT/verifyHMAC\";\nimport { sendConfirmationMessage } from \"../Kozz-Module/Methods/confirmationMessage\";\n\nconst EventsRouter = Router();\n\nEventsRouter.post(\n  \"/create_event\",\n  useJWT([\"events_create\"]),\n  safeRequest(async (req, res) => {\n    const { name, description, location, organizer, date, bannerUrl } =\n      V.validate(\n        {\n          name: V.string,\n          description: V.string,\n          location: V.string,\n          organizer: V.string.nullable(),\n          date: V.string,\n          bannerUrl: V.string.nullable(),\n        },\n        req.body\n      );\n\n    const createEventTransaction = await eventsController.createEvent({\n      name,\n      description,\n      date: new Date(date).getTime(),\n      location,\n      organizer,\n      bannerUrl,\n    });\n\n    return safeReturnTransaction(createEventTransaction);\n  })\n);\n\nEventsRouter.post(\n  \"/update_event\",\n  useJWT([\"events_create\"]),\n  safeRequest(async (req, res) => {\n    const { id, data } = V.validate(\n      {\n        id: V.string,\n        // This should be improved\n        data: V.anyObject,\n      },\n      req.body\n    );\n\n    const updateTransaction = await eventsController.updateEvent(\n      id,\n      data as Partial<DatabaseFriendlyEntityModel<\"event\">>\n    );\n\n    return safeReturnTransaction(updateTransaction);\n  })\n);\n\nEventsRouter.post(\n  \"/confirm\",\n  useHMAC,\n  json(),\n  safeRequest(async (req, res) => {\n    const { payload } = V.validate(\n      {\n        payload: V.string,\n      },\n      req.body\n    );\n\n    const { action, eventId, userId } =\n      eventCofirmationCryptoService.decrypt(payload);\n\n    console.log({ action, eventId, userId });\n\n    if (action === \"confirm\") {\n      const interestedTransaction = await userController.userInterestedInEvent(\n        userId,\n        eventId\n      );\n      return safeReturnTransaction(interestedTransaction);\n    } else {\n      return safeReturnTransaction(\n        transactionError(FAIL_REASONS.OPERATION_FORBIDDEN)\n      );\n    }\n  })\n);\n\nEventsRouter.get(\n  \"/confirmation_payload\",\n  useJWT([\"admin\"]),\n  safeRequest(async (req, res) => {\n    const { userId, eventId } = V.validate(\n      {\n        userId: V.string,\n        eventId: V.string,\n      },\n      req.query as Record<string, string>\n    );\n\n    const payload = eventCofirmationCryptoService.encrypt({\n      action: \"confirm\",\n      eventId,\n      userId,\n    });\n\n    res.send({\n      payload,\n    });\n  })\n);\n\nEventsRouter.post(\n  \"/check_payload\",\n  useJWT([\"admin\"]),\n  safeRequest(async (req, res) => {\n    const { payload } = V.validate(\n      {\n        payload: V.string,\n      },\n      req.body\n    );\n\n    try {\n      const decrypted = eventCofirmationCryptoService.decrypt(payload);\n      res.send({\n        valid: true,\n        data: decrypted,\n      });\n    } catch (error) {\n      res.send({\n        valid: false,\n        error: \"Invalid payload\",\n      });\n    }\n  })\n);\n\nEventsRouter.post(\n  \"/send_confirmation_message\",\n  useJWT([\"admin\"]),\n  safeRequest(async (req, res) => {\n    const { userId, eventId } = V.validate(\n      {\n        userId: V.string,\n        eventId: V.string,\n      },\n      req.body\n    );\n\n    const result = await sendConfirmationMessage(userId, eventId);\n\n    res.send({ success: \"maybe?\" });\n  })\n);\n\nexport default EventsRouter;\n"],"mappings":"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","ignoreList":[]}