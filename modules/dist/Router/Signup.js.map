{"version":3,"file":"Signup.js","names":["_express","_interopRequireWildcard","require","_SafeRequest","V","_userController","_interopRequireDefault","_SafeDatabaseTransaction","_verifyHMAC","_sanitizeCity","_confirmationMessage","e","__esModule","default","t","WeakMap","r","n","o","i","f","__proto__","has","get","set","hasOwnProperty","call","Object","defineProperty","getOwnPropertyDescriptor","signupRouter","Router","post","useHMAC","json","safeRequest","req","console","log","body","name","phoneNumber","city","DOB","source","confirmed","validate","string","phone","number","nullable","boolean","or","enums","startsWith","sanitizedCity","findBestCityMatch","createUserTransaction","userController","createUser","best","isTransactionSuccessful","reason","FAIL_REASONS","ALREADY_EXISTS","transactionSuccess","message","success","sendConfirmationMessage","data","id","safeReturnTransaction","_default","exports"],"sources":["../../src/Router/Signup.ts"],"sourcesContent":["import Router, { json } from \"express\";\nimport { safeRequest } from \"../Util/SafeRequest\";\nimport * as V from \"../Util/ZodValidation\";\nimport userController from \"../database/controllers/userController\";\nimport type { AllEntitiesModel } from \"../database/schemas\";\nimport {\n  FAIL_REASONS,\n  isTransactionSuccessful,\n  safeReturnTransaction,\n  transactionSuccess,\n} from \"../Util/SafeDatabaseTransaction\";\nimport { useHMAC } from \"../JWT/verifyHMAC\";\nimport { findBestCityMatch } from \"../Util/sanitizeCity\";\nimport { sendConfirmationMessage } from \"../Kozz-Module/Methods/confirmationMessage\";\n\nconst signupRouter = Router();\n\nsignupRouter.post(\n  \"/me\",\n  useHMAC,\n  json(),\n  safeRequest(async (req) => {\n    console.log({ body: req.body });\n\n    const { name, phoneNumber, city, DOB, source, confirmed } = V.validate(\n      {\n        name: V.string,\n        phoneNumber: V.phone,\n        city: V.string,\n        DOB: V.number.nullable(),\n        confirmed: V.boolean.nullable(),\n        source: V.or(\n          V.enums([\"novo\", \"website\", \"instagram\", \"referral\"]),\n          V.string.startsWith(\"whatsapp-\")\n        ),\n      },\n      req.body\n    );\n\n    const sanitizedCity = await findBestCityMatch(city);\n\n    const createUserTransaction = await userController.createUser({\n      name,\n      phoneNumber,\n      city: sanitizedCity.best || city,\n      DOB,\n      source: source as AllEntitiesModel[\"user\"][\"source\"],\n      confirmed,\n    });\n\n    if (!isTransactionSuccessful(createUserTransaction)) {\n      if (createUserTransaction.reason === FAIL_REASONS.ALREADY_EXISTS) {\n        return transactionSuccess({ message: \"resignup\" });\n      }\n    }\n\n    if (createUserTransaction.success) {\n      // TODO: Have to fetch next event and send message accordingly\n      // this hardcoded event ID should be removed\n      await sendConfirmationMessage(\n        createUserTransaction.data.id,\n        \"Chopp sem imposto-062d8617-70c8-4f45-aa5e-e1acaae93f56\"\n      );\n    }\n\n    return safeReturnTransaction(createUserTransaction);\n  })\n);\n\nexport default signupRouter;\n"],"mappings":"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","ignoreList":[]}